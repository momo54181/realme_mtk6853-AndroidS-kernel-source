name: 编译OPPO/Realme-安卓12-通用mt6853机型内核
        支持SukiSU-Ultra docker lxc kvm Kali-Nethunter

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 5' # 每周五午夜执行
    
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: 构建编译内核环境
      run: |
        sudo apt-get update
        sudo -E apt-get -y -qq install git make bc bison ccache openssl dos2unix zip kmod cpio flex libelf-dev curl libssl-dev libtfm-dev wget device-tree-compiler ca-certificates python3 python2 binutils binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: 下载 Gcc编译器
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir gcc64
        wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc64/ -zxvf gcc-aarch64.tar.gz
    
        mkdir gcc32
        wget -O gcc-arm.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc32/ -zxvf gcc-arm.tar.gz

    - name: 下载Clang编译器
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        git clone -q --depth=1 https://github.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-6443078 -b 10.0 clang-aosp

    - name: 下载内核源码
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/momo54181/realme_mtk6853-AndroidS-kernel-source android-kernel
        cd android-kernel

    - name: 更新 KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5

    - name: 设置ccache缓存
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-kernel-mido-kernel
        max-size: 2G

    - name: 开始编译内核
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc64/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc32/bin:$PATH
        # export KBUILD_BUILD_HOST=$(hostname)
        # export KBUILD_BUILD_USER=$(whoami)
        make -s -j$(nproc --all) O=out ARCH=arm64 mt6853_defconfig
        make -j$(nproc --all) CC="ccache clang" O=out ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- LD=ld.lld

    - name: 制作Anykernel3卡刷包
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!block=/dev/block/by-name/boot;!block=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/is_slot_device=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        find AnyKernel3/ -name ".git*" -exec rm -rf {} +
        rm -f AnyKernel3/README.md
        KERNEL_VER=$(grep "Linux version" android-kernel/out/.config | awk '{print $3}')
        DATE=$(date +%Y%m%d)
        cd AnyKernel3
        zip -r 卡刷包.zip ./*
        
    - name: 上传 Anykernel3 编译内核 到 Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
           kernel_workspace/AnyKernel3/*
           kernel_workspace/android-kernel/out/arch/arm64/boot/Image.gz
        name: ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
